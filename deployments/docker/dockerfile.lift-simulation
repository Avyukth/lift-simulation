FROM golang:1.23-alpine AS builder

WORKDIR /app

# Install build dependencies
RUN apk add --no-cache git gcc musl-dev

# Copy the entire src directory
COPY src/ .

# Download dependencies
RUN go mod download

# Build arguments
ARG BUILD_REF
ARG BUILD_DATE

# Build the application
RUN CGO_ENABLED=1 GOOS=linux go build -ldflags "-X main.build=${BUILD_REF}" -o lift-simulation ./cmd/api

# Final stage
FROM alpine:3.20

# Install runtime dependencies
RUN apk --no-cache add ca-certificates tzdata

# Create a non-root user and group
RUN addgroup -g 1000 -S lsgroup && \
    adduser -u 1000 -h /app -G lsgroup -S lsuser

# Set working directory
WORKDIR /app

# Copy the binary from builder
COPY --from=builder --chown=lsuser:lsgroup /app/lift-simulation .

# Copy the .env file
COPY --chown=lsuser:lsgroup src/.env .

# Switch to non-root user
USER lsuser

CMD ["./lift-simulation"]
# Metadata
LABEL org.opencontainers.image.created="${BUILD_DATE}" \
    org.opencontainers.image.title="lift-simulation" \
    org.opencontainers.image.authors="Your Name <makur.subrajit@gmail.com>" \
    org.opencontainers.image.source="https://github.com/Avyukth/lift-simulation" \
    org.opencontainers.image.revision="${BUILD_REF}" \
    org.opencontainers.image.vendor="subhrajit.me"
